"0",""
"0","# protrain_s <- bake(mrna_s, new_data = train_s)"
"0","# protest_s <- bake(mrna_s, new_data = test_s)"
"0",""
"0","train_pca <- data.frame(covid = protrain_s$COVID_X1, pca$x)"
"0",""
"0","#transform preprocessed test dataframe into PCA"
"0","test_pca <- predict(pca, newdata = protest_s)"
"0","test_pca <- as.data.frame(test_pca)"
"0","test_pca <- data.frame(covid = protest_s$COVID_X1, test_pca)"
"0",""
"0","# limit to only the first 16 PC's (per eigenvalue criterion)"
"0","train_pca_final <- train_pca[,1:17]"
"0","test_pca_final <- test_pca[,1:17]"
"0",""
"0","# create xgb matrix "
"0","X_train_pca <- as.matrix(train_pca_final[setdiff(names(train_pca_final), ""covid"")])"
"0","Y_train_pca <- train_pca_final$covid"
"0","X_test_pca <- as.matrix(test_pca_final[setdiff(names(test_pca_final), ""covid"")])"
"0","Y_test_pca <- test_pca_final$covid"
"0",""
"0",""
"0","xgb_grid_pca = expand.grid("
"0","                  nrounds = 1000,"
"0","                  eta = c(0.1), #0.05, 0.01), # limited for processing brevity"
"0","                  max_depth = c(2, 3, 4, 5, 6, 7, 8),"
"0","                  gamma = 0,"
"0","                  colsample_bytree=1,"
"0","                  min_child_weight=c(1, 2, 3, 4 ,5),"
"0","                  subsample=1)"
"0",""
"0","control_pca <- trainControl(method =""cv"", "
"0","                            number = 5)"
"0",""
"0",""
"0","set.seed(333)"
"0","xgb_caret_pca <- train(x=X_train_pca, "
"0","                   y=as.factor(Y_train_pca), "
"0","                   method ='xgbTree',"
"0","                   metric =""Accuracy"","
"0","                   objective = ""binary:logistic"","
"0","                   #nthreads = 6,"
"0","                   trControl = control_pca,"
"0","                   tuneGrid = xgb_grid_pca"
"0","                   ) "
"0",""
"0","# Best tune parameters from hyper parameter grid search"
"0","#xgb_caret_pca$results"
"0","xgb_caret_pca$bestTune"
